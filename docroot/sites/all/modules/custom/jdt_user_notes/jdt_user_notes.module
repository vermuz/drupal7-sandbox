<?php
/**
 * @file
 * User Notes Module
 */

/**
 * Implements hook_permission().
 */
function jdt_user_notes_permission() {
  return array(
    'jdt_user_notes_permission' => array(
      'title' => t('Administer Notes'),
      'description' => t('Perform administration tasks for notes.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function jdt_user_notes_menu() {
    // Note URL Pattern -> note/article_nid.
      $items['note/%'] = array(
        'access callback' => TRUE,
        'page callback' => 'drupal_get_form',
        'page arguments' => array('jdt_user_notes_form_definition', 1),
        'file' => 'jdt_user_notes_crud.inc',
        'access callback' => 'jdt_user_notes_menu_permissions_callback',
        'access arguments' => array('jdt_user_notes_permission'),
        'type' => MENU_CALLBACK,
      );
      return $items;
}

/**
 * Permissions for the menu
 */
function jdt_user_notes_menu_permissions_callback($permission) {
  return user_access($access);
}

/**
 * Form definition.
 */
function jdt_user_notes_form_definition($form, &$form_state, $nid) {
  global $user;
  $user_id = $user->uid;
  // Default value check
  // If default value exists in database use that as default value.
  // If default value does not exist - print empty.
  $result = jdt_user_notes_entry_load($nid, $user_id);
  // Set values for note and note id.
  if (isset($result['note_text'])) {
    $default_value_note = $result['note_text'];
  }
  else {
    $default_value_note = '';
  }
  if (isset($result['note_id'])) {
    $default_note_id = $result['note_id'];
  }
  else {
    // If a note does not exist - generate a random note id.
    $nid_rand = rand();
    $default_note_id = $nid_rand;
  }
  $form['fieldset'] = array(
    '#type' => 'fieldset',
    '#title' => t('Note to Article'),
    '#default_value' => 'Hello',
  );
  $form['fieldset']['note_textfield'] = array(
    '#type' => 'textfield',
    '#title' => t('Note'),
    '#default_value' => $default_value_note,
  );
  // Grab value for node id and make it part of the form state.
  $form['nid'] = array(
    '#type' => 'value',
    '#value' => $nid,
  );
  // Make User ID available to the form.
  $form['uid'] = array(
    '#type' => 'value',
    '#value' => $user_id,
  );
  // Make Note ID available to the form.
  $form['note_id'] = array(
    '#type' => 'value',
    '#value' => $default_note_id,
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save Note'),
  );
  return $form;
}

/**
 * Submit handler.
 */
function jdt_user_notes_form_definition_submit($form, &$form_state) {
  // Grab values from the form state.
  $values = $form_state['values'];
  $entry = array(
    'note_text'   => $form_state['values']['note_textfield'],
    'author_uid'  => $form_state['values']['uid'],
    'note_id'     => $form_state['values']['note_id'],
  );
  jdt_user_notes_update($entry);
  drupal_set_message(t('Your note has been added'));
}
