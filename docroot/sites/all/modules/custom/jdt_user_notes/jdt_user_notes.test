<?php
/**
 * @file
 * Tests for Notes Module
 */

/**
 * Declare class extending from Drupal Test Case.
 */
class JDTUSERNOTESTestCase extends DrupalWebTestCase {
  /**
   * GetInfo().
   */
  public static function getInfo() {
    return array(
      'name' => 'JDT User Note Test',
      'description' => 'Test CRUD Operations',
      'group' => 'Jdt User Notes',
    );
  }

  /**
   * Create user with administrative credentials for carrying out tests.
   */
  public function drupalCreateAdminUser(array $permissions = array()) {
    $roles = user_roles();
    $index = array_search('administrator', $roles);
    $user = $this->drupalCreateUser($permissions);
    $user->roles[$index] = 'administrator';
    return user_save($user);
  }

  /**
   * Set Up.
   */
  public function setUp() {
    // Enable any modules required for the test. This should be an array of
    // module names.
    parent::setUp(array(
      'jdt_core',
      'jdt_content_type_article',
      'jdt_user_notes',
    ));
    $user = $this->drupalCreateAdminUser();
    $this->drupalLogin($user);
    // Load CRUD Functions.
    module_load_include('inc', 'jdt_user_notes', 'jdt_user_notes_crud');
  }

  /**
   * Tests Insert Functionality.
   */
  public function testLoading() {
    $article_nid = 1;
    $user_id = 1;
    // Load Entries.
    $result = jdt_user_notes_entry_load($article_nid, $user_id);
    // Check what you get.
    $this->assertNotNull(
      $result,
      'Found an entry.'
    );
  }

  /**
   * Tests Insert Functionality.
   */
  public function testInsertion() {
    $article_nid = 11234;
    $user_id = 1;
    // Create Entry.
    $entry = array(
      '$article_nid' => 11234,
      'note_text' => 'Text 3',
    );
    jdt_user_notes_insert($entry);
    $result = jdt_user_notes_entry_load($article_nid, $user_id);
    $this->assertNotNull(
      $result,
      'Insertion Successful.'
    );
  }

  /**
   * Tests Delete Functionality.
   */
  public function testDeletion() {
    $article_nid = 711;
    $user_id = 1;
    // Create entry so you can delete it.
    $entry = array(
      'note_id' => 2345677,
      'article_nid' => 711,
      'note_text' => 'Text 4',
    );
    jdt_user_notes_insert($entry);
    // Delete it.
    $result = jdt_user_notes_delete($entry);
    // Load values.
    $result = jdt_user_notes_entry_load($article_nid, $user_id);
    $this->assertNotNull(
      $result,
      'Ouch looks like its gone'
    );
  }

  /**
   * Tests Updates Functionality.
   */
  public function testUpdate() {
    $article_nid = 711123;
    $user_id = 1;
    // Create entry so you can update it.
    $entry = array(
      'note_id' => 23456799,
      'article_nid' => 711123,
      'note_text' => 'Text 5',
    );
    jdt_user_notes_insert($entry);
    // Load entry.
    $result = jdt_user_notes_entry_load($article_nid, $user_id);
    // Change note to Text 6 New.
    $result['note_text'] = 'Text 6 New';
    // Update entry in Database.
    jdt_user_notes_update($result);
    $result = jdt_user_notes_entry_load($article_nid,$user_id);
    $this->assertNotNull(
      $result,
      '--Update ran just fine--'
    );
  }
}
